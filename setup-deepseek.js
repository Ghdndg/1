const fs = require('fs');

console.log('üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ DeepSeek API (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)...');

// –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª —Å DeepSeek API
const envContent = `# DeepSeek API (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)
DEEPSEEK_API_KEY=sk-free-deepseek-api-key
DEEPSEEK_BASE_URL=https://api.deepseek.com
MODEL_NAME=deepseek-chat

# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Gemini
# GEMINI_API_KEY=your_gemini_key

PORT=3000
NODE_ENV=development
`;

fs.writeFileSync('.env', envContent);
console.log('‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω');

// –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è DeepSeek
const indexPath = './app/index.js';
let code = fs.readFileSync(indexPath, 'utf8');

// –ó–∞–º–µ–Ω—è–µ–º –∏–º–ø–æ—Ä—Ç—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
const newCode = `require('dotenv').config();
const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');
const path = require('path');
const fs = require('fs');
const axios = require('axios');
const { companyInfo } = require('./data/company_info');
const { vitahubData } = require('./data/vitahub_data');
const { marketingData } = require('./data/marketing_data');

const app = express();
const port = process.env.PORT || 3000;

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∏–∞–ª–æ–≥–æ–≤
const sessionStore = new Map();

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
const logDir = path.join(__dirname, '..', 'logs');
if (!fs.existsSync(logDir)) {
  fs.mkdirSync(logDir, { recursive: true });
}

function logToFile(level, message, data = null) {
  const timestamp = new Date().toISOString();
  const logEntry = {
    timestamp,
    level,
    message,
    data
  };
  
  const logFile = path.join(logDir, \`chatbot-\${new Date().toISOString().split('T')[0]}.log\`);
  fs.appendFileSync(logFile, JSON.stringify(logEntry) + '\\n');
  
  console.log(\`[\${timestamp}] \${level.toUpperCase()}: \${message}\`, data || '');
}

// Middleware
app.use(bodyParser.json({ limit: '10mb' }));
app.use(bodyParser.urlencoded({ extended: true, limit: '10mb' }));
app.use(cors({
  origin: true,
  credentials: true,
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
  allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With']
}));

app.use((req, res, next) => {
  const start = Date.now();
  res.on('finish', () => {
    const duration = Date.now() - start;
    logToFile('info', \`\${req.method} \${req.path}\`, {
      status: res.statusCode,
      duration: \`\${duration}ms\`,
      userAgent: req.get('User-Agent'),
      ip: req.ip
    });
  });
  next();
});

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
app.use(express.static(path.join(__dirname, '..', 'public')));

// API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è DeepSeek
const DEEPSEEK_API_KEY = process.env.DEEPSEEK_API_KEY || 'sk-free-deepseek-api-key';
const DEEPSEEK_BASE_URL = process.env.DEEPSEEK_BASE_URL || 'https://api.deepseek.com';
const MODEL_NAME = process.env.MODEL_NAME || 'deepseek-chat';

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞
app.get('/api/health', async (req, res) => {
  res.json({
    status: 'ok',
    timestamp: new Date().toISOString(),
    uptime: process.uptime(),
    version: '3.0.0',
    services: {
      deepseek: DEEPSEEK_API_KEY && DEEPSEEK_API_KEY !== 'sk-free-deepseek-api-key' ? 'configured' : 'demo_mode',
      model: MODEL_NAME,
      sessions: sessionStore.size
    }
  });
});

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
app.get('/api/stats', (req, res) => {
  const stats = {
    totalSessions: sessionStore.size,
    activeSessions: Array.from(sessionStore.values()).filter(s => 
      Date.now() - (s.lastActivity || 0) < 30 * 60 * 1000
    ).length,
    totalMessages: Array.from(sessionStore.values()).reduce((sum, s) => 
      sum + (s.messages?.length || 0), 0
    )
  };
  
  res.json(stats);
});

// –û—Å–Ω–æ–≤–Ω–æ–π API —á–∞—Ç–∞
app.get('/api/chat', (req, res) => {
  res.json({
    status: 'ok',
    message: 'VITAHUB Chatbot API v3.0 —Ä–∞–±–æ—Ç–∞–µ—Ç —Å DeepSeek',
    endpoints: {
      chat: 'POST /api/chat',
      health: 'GET /api/health',
      stats: 'GET /api/stats',
      suggestions: 'GET /api/suggestions'
    }
  });
});

// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –≤–æ–ø—Ä–æ—Å–æ–≤
app.get('/api/suggestions', (req, res) => {
  const suggestions = [
    "–ß—Ç–æ —Ç–∞–∫–æ–µ VITAHUB Energy?",
    "–ö–∞–∫–æ–π —Å–æ—Å—Ç–∞–≤ —É –Ω–∞–ø–∏—Ç–∫–∞?",
    "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–ø–æ—Ç—Ä–µ–±–ª—è—Ç—å?",
    "–ï—Å—Ç—å –ª–∏ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è?",
    "–ß–µ–º –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –æ–±—ã—á–Ω—ã—Ö —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–æ–≤?",
    "–ü–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ –¥–ª—è –¥–∏–µ—Ç—ã?",
    "–ì–¥–µ –∫—É–ø–∏—Ç—å VITAHUB?",
    "–ö–∞–∫–∏–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è?"
  ];
  
  res.json({ suggestions });
});

// –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞
function createSystemPrompt() {
  return \`–¢—ã –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç VITAHUB - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º –Ω–∞–ø–∏—Ç–∫–∞–º.

–í–ê–ñ–ù–´–ï –ü–†–ê–í–ò–õ–ê:
- –û—Ç–≤–µ—á–∞–π –¥—Ä—É–∂–µ–ª—é–±–Ω–æ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ
- –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Å—è –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö VITAHUB
- –î–∞–≤–∞–π —Ç–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ—Å—Ç–∞–≤–µ –∏ –ø–æ–ª—å–∑–µ
- –ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å —Ç–æ—á–Ω—ã–π –æ—Ç–≤–µ—Ç, —á–µ—Å—Ç–Ω–æ —Å–∫–∞–∂–∏ –æ–± —ç—Ç–æ–º

–ü–†–û–î–£–ö–¢–´ VITAHUB:

1. **VITAHUB Energy** üî•
   - –ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –Ω–∞–ø–∏—Ç–æ–∫
   - –°–æ—Å—Ç–∞–≤: –ö–æ—Ñ–µ–∏–Ω, L-–∫–∞—Ä–Ω–∏—Ç–∏–Ω, –¢–∞—É—Ä–∏–Ω, –í–∏—Ç–∞–º–∏–Ω—ã –≥—Ä—É–ø–ø—ã B
   - –ë–µ–∑ —Å–∞—Ö–∞—Ä–∞, –Ω–∞ —Å—Ç–µ–≤–∏–∏
   - –î–∞–µ—Ç —ç–Ω–µ—Ä–≥–∏—é –Ω–∞ 4-6 —á–∞—Å–æ–≤ –±–µ–∑ —Å—Ä—ã–≤–∞

2. **VITAHUB Detox** üåø  
   - –î–µ—Ç–æ–∫—Å–∏—Ñ–∏—Ü–∏—Ä—É—é—â–∏–π –Ω–∞–ø–∏—Ç–æ–∫
   - –°–æ—Å—Ç–∞–≤: –≠–∫—Å—Ç—Ä–∞–∫—Ç –∑–µ–ª–µ–Ω–æ–≥–æ —á–∞—è, –ò–º–±–∏—Ä—å, –ö—É—Ä–∫—É–º–∞
   - –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–µ—á–µ–Ω—å –∏ –º–µ—Ç–∞–±–æ–ª–∏–∑–º
   - –ê–Ω—Ç–∏–æ–∫—Å–∏–¥–∞–Ω—Ç—ã –¥–ª—è –æ—á–∏—â–µ–Ω–∏—è

3. **VITAHUB Antistress** üòå
   - –ê–Ω—Ç–∏—Å—Ç—Ä–µ—Å—Å–æ–≤—ã–π –Ω–∞–ø–∏—Ç–æ–∫  
   - –°–æ—Å—Ç–∞–≤: –ú–∞–≥–Ω–∏–π, L-—Ç–µ–∞–Ω–∏–Ω, –≠–∫—Å—Ç—Ä–∞–∫—Ç –ø–∞—Å—Å–∏—Ñ–ª–æ—Ä—ã
   - –°–Ω–∏–∂–∞–µ—Ç —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å, —É–ª—É—á—à–∞–µ—Ç —Å–æ–Ω
   - –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –Ω–µ—Ä–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É

–û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –∏—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ –¥–ª—è –¥—Ä—É–∂–µ–ª—é–±–Ω–æ—Å—Ç–∏.\`;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ
function processLocalMessage(message) {
  const lowerMessage = message.toLowerCase();
  
  if (lowerMessage.includes('energy') || lowerMessage.includes('—ç–Ω–µ—Ä–≥')) {
    return \`üî• **VITAHUB Energy** - –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –Ω–∞–ø–∏—Ç–æ–∫!

‚ú® **–°–æ—Å—Ç–∞–≤:**
‚Ä¢ –ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –∫–æ—Ñ–µ–∏–Ω 80–º–≥
‚Ä¢ L-–∫–∞—Ä–Ω–∏—Ç–∏–Ω –¥–ª—è –∂–∏—Ä–æ—Å–∂–∏–≥–∞–Ω–∏—è  
‚Ä¢ –¢–∞—É—Ä–∏–Ω –¥–ª—è —Ñ–æ–∫—É—Å–∞
‚Ä¢ –í–∏—Ç–∞–º–∏–Ω—ã B3, B6, B12

‚ö° **–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:**
‚Ä¢ –ß–∏—Å—Ç–∞—è —ç–Ω–µ—Ä–≥–∏—è –±–µ–∑ —Å—Ä—ã–≤–∞
‚Ä¢ –ë–µ–∑ —Å–∞—Ö–∞—Ä–∞ (–Ω–∞ —Å—Ç–µ–≤–∏–∏)
‚Ä¢ –£–ª—É—á—à–∞–µ—Ç –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—é
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –º–µ—Ç–∞–±–æ–ª–∏–∑–º

üïê –î–µ–π—Å—Ç–≤—É–µ—Ç 4-6 —á–∞—Å–æ–≤, –∏–¥–µ–∞–ª—å–Ω–æ –ø–µ—Ä–µ–¥ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–æ–π –∏–ª–∏ —Ä–∞–±–æ—Ç–æ–π!\`;
  }
  
  if (lowerMessage.includes('detox') || lowerMessage.includes('–¥–µ—Ç–æ–∫—Å')) {
    return \`üåø **VITAHUB Detox** - –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ –æ—á–∏—â–µ–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–º–∞!

üçÉ **–°–æ—Å—Ç–∞–≤:**
‚Ä¢ –≠–∫—Å—Ç—Ä–∞–∫—Ç –∑–µ–ª–µ–Ω–æ–≥–æ —á–∞—è
‚Ä¢ –ò–º–±–∏—Ä—å –¥–ª—è –ø–∏—â–µ–≤–∞—Ä–µ–Ω–∏—è
‚Ä¢ –ö—É—Ä–∫—É–º–∞ (–ø—Ä–æ—Ç–∏–≤–æ–≤–æ—Å–ø–∞–ª–∏—Ç–µ–ª—å–Ω–∞—è)
‚Ä¢ –ê–Ω—Ç–∏–æ–∫—Å–∏–¥–∞–Ω—Ç–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å

üíö **–ü–æ–ª—å–∑–∞:**
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–µ—á–µ–Ω—å
‚Ä¢ –£—Å–∫–æ—Ä—è–µ—Ç –º–µ—Ç–∞–±–æ–ª–∏–∑–º  
‚Ä¢ –í—ã–≤–æ–¥–∏—Ç —Ç–æ–∫—Å–∏–Ω—ã
‚Ä¢ –£–ª—É—á—à–∞–µ—Ç –ø–∏—â–µ–≤–∞—Ä–µ–Ω–∏–µ

–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∫—É—Ä—Å–æ–º 2-4 –Ω–µ–¥–µ–ª–∏ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞!\`;
  }
  
  if (lowerMessage.includes('antistress') || lowerMessage.includes('–∞–Ω—Ç–∏—Å—Ç—Ä–µ—Å—Å') || lowerMessage.includes('—Å—Ç—Ä–µ—Å—Å')) {
    return \`üòå **VITAHUB Antistress** - –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —É—Å–ø–æ–∫–æ–µ–Ω–∏–µ!

üßò **–°–æ—Å—Ç–∞–≤:**
‚Ä¢ –ú–∞–≥–Ω–∏–π (300–º–≥) –¥–ª—è –Ω–µ—Ä–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
‚Ä¢ L-—Ç–µ–∞–Ω–∏–Ω –¥–ª—è —Ä–µ–ª–∞–∫—Å–∞—Ü–∏–∏
‚Ä¢ –≠–∫—Å—Ç—Ä–∞–∫—Ç –ø–∞—Å—Å–∏—Ñ–ª–æ—Ä—ã
‚Ä¢ –ö–æ–º–ø–ª–µ–∫—Å –∞–º–∏–Ω–æ–∫–∏—Å–ª–æ—Ç

‚ú® **–≠—Ñ—Ñ–µ–∫—Ç:**
‚Ä¢ –°–Ω–∏–∂–∞–µ—Ç —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å
‚Ä¢ –£–ª—É—á—à–∞–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞
‚Ä¢ –ü–æ–≤—ã—à–∞–µ—Ç —Å—Ç—Ä–µ—Å—Å–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å  
‚Ä¢ –ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ

–ü—Ä–∏–Ω–∏–º–∞—Ç—å –≤–µ—á–µ—Ä–æ–º –∑–∞ 1-2 —á–∞—Å–∞ –¥–æ —Å–Ω–∞!\`;
  }
  
  if (lowerMessage.includes('—Å–æ—Å—Ç–∞–≤') || lowerMessage.includes('–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç')) {
    return \`üìã **–í—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã VITAHUB –∏–º–µ—é—Ç –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π —Å–æ—Å—Ç–∞–≤:**

üî• **Energy:** –ö–æ—Ñ–µ–∏–Ω, L-–∫–∞—Ä–Ω–∏—Ç–∏–Ω, –¢–∞—É—Ä–∏–Ω, B-–≤–∏—Ç–∞–º–∏–Ω—ã
üåø **Detox:** –ó–µ–ª–µ–Ω—ã–π —á–∞–π, –ò–º–±–∏—Ä—å, –ö—É—Ä–∫—É–º–∞  
üòå **Antistress:** –ú–∞–≥–Ω–∏–π, L-—Ç–µ–∞–Ω–∏–Ω, –ü–∞—Å—Å–∏—Ñ–ª–æ—Ä–∞

‚úÖ **–ë–µ–∑ –≤—Ä–µ–¥–Ω—ã—Ö –¥–æ–±–∞–≤–æ–∫:**
‚Ä¢ –ë–µ–∑ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∫—Ä–∞—Å–∏—Ç–µ–ª–µ–π
‚Ä¢ –ë–µ–∑ –∫–æ–Ω—Å–µ—Ä–≤–∞–Ω—Ç–æ–≤  
‚Ä¢ –ë–µ–∑ –ì–ú–û
‚Ä¢ –í–µ–≥–∞–Ω—Å–∫–∏–π —Å–æ—Å—Ç–∞–≤\`;
  }
  
  if (lowerMessage.includes('–≥–¥–µ –∫—É–ø–∏—Ç—å') || lowerMessage.includes('–∑–∞–∫–∞–∑–∞—Ç—å') || lowerMessage.includes('—Ü–µ–Ω–∞')) {
    return \`üõí **–ì–¥–µ –∫—É–ø–∏—Ç—å VITAHUB:**

üåê **–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç:** vitahub.ru
üì± **–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω—ã:** Wildberries, Ozon
üè™ **–†–æ–∑–Ω–∏—Ü–∞:** –°–ø–æ—Ä—Ç–º–∞—Å—Ç–µ—Ä, –î–∏–∫—Å–∏ (–≤ –∫—Ä—É–ø–Ω—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö)

üí∞ **–¶–µ–Ω—ã:**
‚Ä¢ Energy: ~300-400‚ÇΩ
‚Ä¢ Detox: ~350-450‚ÇΩ  
‚Ä¢ Antistress: ~400-500‚ÇΩ

üöö –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏, —á–∞—Å—Ç–æ –µ—Å—Ç—å –∞–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏!\`;
  }
  
  // –ë–∞–∑–æ–≤—ã–π –æ—Ç–≤–µ—Ç
  return \`üëã –ü—Ä–∏–≤–µ—Ç! –Ø –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç VITAHUB, —Ä–∞—Å—Å–∫–∞–∂—É –≤—Å—ë –æ –Ω–∞—à–∏—Ö —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–∞—Ö:

üî• **Energy** - –¥–ª—è —ç–Ω–µ—Ä–≥–∏–∏ –∏ —Ñ–æ–∫—É—Å–∞
üåø **Detox** - –¥–ª—è –æ—á–∏—â–µ–Ω–∏—è –æ—Ä–≥–∞–Ω–∏–∑–º–∞  
üòå **Antistress** - –¥–ª—è —Å–Ω—è—Ç–∏—è —Å—Ç—Ä–µ—Å—Å–∞

–û —á—ë–º —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ? –°–æ—Å—Ç–∞–≤, –ø–æ–ª—å–∑–∞, –≥–¥–µ –∫—É–ø–∏—Ç—å?\`;
}

// –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —á–∞—Ç–∞
app.post('/api/chat', async (req, res) => {
  try {
    const { message: userMessage, sessionId: providedSessionId, metadata = {} } = req.body;
    
    if (!userMessage || typeof userMessage !== 'string' || userMessage.trim().length === 0) {
      return res.status(400).json({ 
        error: '–ü–æ–ª–µ message –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–µ–∫—Å—Ç',
        code: 'INVALID_MESSAGE'
      });
    }

    const sessionId = providedSessionId || \`session_\${Date.now()}_\${Math.random().toString(36).substring(2, 15)}\`;
    
    logToFile('info', '–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å', {
      sessionId,
      messageLength: userMessage.length,
      metadata
    });
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
    if (!sessionStore.has(sessionId)) {
      sessionStore.set(sessionId, {
        id: sessionId,
        messages: [],
        lastActivity: Date.now(),
        questionCount: 0
      });
    }
    
    const sessionData = sessionStore.get(sessionId);
    sessionData.lastActivity = Date.now();
    sessionData.questionCount++;
    
    let assistantMessage = '';
    let responseSource = 'local';
    
    // –ï—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω API –∫–ª—é—á DeepSeek - –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
    if (DEEPSEEK_API_KEY && DEEPSEEK_API_KEY !== 'sk-free-deepseek-api-key') {
      try {
        const systemPrompt = createSystemPrompt();
        const messages = [
          { role: "system", content: systemPrompt },
          ...sessionData.messages.slice(-10),
          { role: "user", content: userMessage }
        ];
        
        const response = await axios.post(\`\${DEEPSEEK_BASE_URL}/v1/chat/completions\`, {
          model: MODEL_NAME,
          messages: messages,
          temperature: 0.7,
          max_tokens: 1000
        }, {
          headers: {
            'Authorization': \`Bearer \${DEEPSEEK_API_KEY}\`,
            'Content-Type': 'application/json'
          },
          timeout: 15000
        });
        
        if (response.data?.choices?.[0]?.message?.content) {
          assistantMessage = response.data.choices[0].message.content.trim();
          responseSource = 'deepseek';
          logToFile('info', '–£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç DeepSeek API');
        } else {
          throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç DeepSeek API');
        }
        
      } catch (apiError) {
        logToFile('warning', '–û—à–∏–±–∫–∞ DeepSeek API, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É', {
          error: apiError.message,
          status: apiError.response?.status
        });
        assistantMessage = processLocalMessage(userMessage);
        responseSource = 'local';
      }
    } else {
      // –î–µ–º–æ-—Ä–µ–∂–∏–º —Å –ª–æ–∫–∞–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π
      assistantMessage = processLocalMessage(userMessage);
      responseSource = 'demo';
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Å–µ—Å—Å–∏—é
    sessionData.messages.push(
      { role: 'user', content: userMessage },
      { role: 'assistant', content: assistantMessage }
    );
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    const suggestions = [
      "–ö–∞–∫–æ–π —Å–æ—Å—Ç–∞–≤ —É –Ω–∞–ø–∏—Ç–∫–∞?",
      "–ï—Å—Ç—å –ª–∏ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è?", 
      "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–ø–æ—Ç—Ä–µ–±–ª—è—Ç—å?",
      "–ì–¥–µ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å?",
      "–ß–µ–º –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤?"
    ];
    
    const response = {
      message: assistantMessage,
      sessionId: sessionId,
      source: responseSource,
      suggestions: suggestions.slice(0, 3),
      metadata: {
        messageCount: sessionData.questionCount,
        responseTime: Date.now()
      }
    };
    
    logToFile('info', '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é', {
      sessionId,
      source: responseSource,
      suggestionsCount: response.suggestions.length
    });
    
    res.json(response);
    
  } catch (error) {
    logToFile('error', '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞', {
      error: error.message,
      stack: error.stack
    });
    
    res.status(500).json({
      error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
      message: '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥',
      code: 'INTERNAL_ERROR'
    });
  }
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(port, () => {
  console.log(\`\\nüöÄ VITAHUB Chatbot v3.0 –∑–∞–ø—É—â–µ–Ω!\`);
  console.log(\`üìç –°–µ—Ä–≤–µ—Ä: http://localhost:\${port}\`);
  console.log(\`üß™ –¢–µ—Å—Ç: http://localhost:\${port}/test.html\`);
  console.log(\`\\nü§ñ API —Å—Ç–∞—Ç—É—Å:\`);
  console.log(\`   DeepSeek: \${DEEPSEEK_API_KEY && DEEPSEEK_API_KEY !== 'sk-free-deepseek-api-key' ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : 'üîÑ –î–µ–º–æ-—Ä–µ–∂–∏–º'}\`);
  console.log(\`   –ú–æ–¥–µ–ª—å: \${MODEL_NAME}\`);
  console.log(\`\\nüí° –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ DeepSeek API:\`);
  console.log(\`   1. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: https://platform.deepseek.com\`);
  console.log(\`   2. –ü–æ–ª—É—á–∏—Ç–µ API –∫–ª—é—á (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)\`);
  console.log(\`   3. –ó–∞–º–µ–Ω–∏—Ç–µ –≤ .env: DEEPSEEK_API_KEY=–≤–∞—à_–∫–ª—é—á\`);
  
  logToFile('info', '–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω', {
    port,
    version: '3.0.0',
    deepseekConfigured: DEEPSEEK_API_KEY && DEEPSEEK_API_KEY !== 'sk-free-deepseek-api-key'
  });
});

module.exports = app;
`;

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π –∫–æ–¥
fs.writeFileSync(indexPath, newCode);

console.log('‚úÖ –ö–æ–¥ —Å–µ—Ä–≤–µ—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è DeepSeek API');
console.log('');
console.log('üéâ –ì–æ—Ç–æ–≤–æ! –°–µ–π—á–∞—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ.');
console.log('');
console.log('üìã –ß—Ç–æ –¥–∞–ª—å—à–µ:');
console.log('1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: npm start');
console.log('2. –û—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:3000/test.html'); 
console.log('3. –î–ª—è –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –ø–æ–ª—É—á–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π API –∫–ª—é—á:');
console.log('   - DeepSeek: https://platform.deepseek.com');
console.log('   - –î–æ–±–∞–≤—å—Ç–µ –≤ .env: DEEPSEEK_API_KEY=–≤–∞—à_–∫–ª—é—á');
console.log('');
console.log('üÜì –í—Å–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—Å—Ç–∞—è!'); 